{"version":3,"sources":["components/Header.js","utils/gridReducer.js","utils/unitReducer.js","components/GridModal.js","components/Subgrid.js","components/NameList.js","components/GridContainer.js","utils/configReducer.js","utils/globalState.js","App.js","reportWebVitals.js","index.js"],"names":["Header","gridSlice","createSlice","name","initialState","selectedCells","recentlySelected","deselectMode","modalVisible","modalOffset","reducers","updateSelectedCells","state","action","payload","sorted","sort","a","b","left","length","top","updateRecentlySelected","toggleDeselectMode","toggleModal","updateModalOffset","actions","unitSlice","id","location","data","2200","updateLocation","find","unit","updateData","setShift","setArea","ModalFrame","styled","div","props","InputModal","Selector","button","value","modalColor","GridModal","useSelector","grid","dispatch","useDispatch","className","onClick","dayjs","extend","customParseFormat","GridTimestamp","StyledSubgrid","section","checks","Subgrid","shiftStart","config","shiftEnd","units","timestamps","useState","setRecentlySelected","i","push","add","format","gridSelectorMouse","e","preventDefault","buttons","target","classList","contains","console","log","window","clearTimeout","forEach","el","remove","dataset","unitName","timestamp","isSelected","cell","splice","indexOf","rect","getBoundingClientRect","innerWidth","right","offsetLeft","offsetTop","onMouseDown","onMouseOver","onMouseUp","map","time","cells","nameCode","replace","data-unit-name","data-timestamp","NameList","Fragment","Container","GridLabel","GridContainer","configSlice","area","configureStore","reducer","configReducer","gridReducer","unitReducer","App","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLAWeA,I,MAAAA,EATf,WACC,OACC,mCACC,wCACA,2B,4CCJUC,EAAYC,YAAY,CACpCC,KAAM,OACNC,aAAc,CACbC,cAAe,GACfC,iBAAkB,GAClBC,cAAc,EACdC,cAAc,EACdC,YAAa,CAAC,EAAG,IAElBC,SAAU,CACTC,oBAAqB,SAACC,EAAOC,GAC5BD,EAAMP,cAAgBQ,EAAOC,QAC7B,IAAMC,EAASF,EAAOC,QAAQE,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,KAAOF,EAAEE,QACpDJ,EAAOK,SAAQR,EAAMH,YAAc,CAACM,EAAO,GAAGM,IAAKN,EAAO,GAAGI,QAElEG,uBAAwB,SAACV,EAAOC,GAC/BD,EAAMN,iBAAmBO,EAAOC,SAEjCS,mBAAoB,SAACX,EAAOC,GAC3BD,EAAML,aAAeM,EAAOC,SAE7BU,YAAa,SAACZ,EAAOC,GACpBD,EAAMJ,aAAeK,EAAOC,SAE7BW,kBAAmB,SAACb,EAAOC,GAC1BD,EAAMH,YAAcI,EAAOC,YAKvB,EACNb,EAAUyB,QADIf,EAAR,EAAQA,oBAA6CY,GAArD,EAA6BD,uBAA7B,EAAqDC,oBAAoBC,EAAzE,EAAyEA,YAGjEvB,GAHR,EAAsFwB,kBAG9ExB,EAAf,S,OCjCa0B,EAAYzB,YAAY,CACpCC,KAAM,QACNC,aAAc,CACb,CACCwB,GAAI,EACJzB,KAAM,UACN0B,SAAU,EACVC,KAAM,CACLC,KAAM,MAGR,CACCH,GAAI,EACJzB,KAAM,UACN0B,SAAU,EACVC,KAAM,KAGRpB,SAAU,CACTsB,eAAgB,SAACpB,EAAOC,GACvBD,EAAMqB,MAAK,SAAAC,GAAI,OAAIA,EAAKN,KAAOf,EAAOC,QAAQc,MAAIC,SAAWhB,EAAOC,QAAQe,UAE7EM,WAAY,SAACvB,EAAOC,GACnBD,EAAMqB,MAAK,SAAAC,GAAI,OAAIA,EAAKN,KAAOf,EAAOC,QAAQc,MAAIE,KAAlD,2BAA8DlB,EAAMkB,MAASjB,EAAOC,aAKhF,EAA8Ba,EAAUD,QAEhCC,GAFR,EAAQS,SAAR,EAAkBC,QAEVV,EAAf,SCUA,IAAMW,EAAaC,IAAOC,IAAV,gZACJ,SAAAC,GAAK,OAAKA,EAAMjC,aAAe,QAAU,UAIlD,gBAAGA,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,YAAjB,OACDD,GAAY,eACJC,EAAY,GADR,0BAEJA,EAAY,GAFR,UAkBRiC,EAAaH,IAAOC,IAAV,+OAaVG,EAAWJ,IAAOK,OAAV,uWAeJ,SAAAH,GAAK,OAvFf,SAAoBA,GACnB,OAAQA,EAAMI,OACb,IAAK,IACJ,MAAM,eACP,IAAK,IACJ,MAAM,SACP,IAAK,IACJ,MAAM,aACP,IAAK,KACL,IAAK,KACL,IAAK,KACJ,MAAM,mBACP,IAAK,KACJ,MAAM,QACP,IAAK,KACJ,MAAM,QACP,IAAK,IACL,IAAK,KACJ,MAAM,QACP,IAAK,IACJ,MAAM,MACP,IAAK,IACJ,MAAM,YACP,IAAK,IACJ,MAAM,oBACP,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KAEL,QACC,MAAO,SAwDSC,CAAWL,MAwCfM,I,IAAAA,EArCf,WACC,IAAMvC,EAAewC,aAAY,SAAApC,GAAK,OAAIA,EAAMqC,KAAKzC,gBAC/CC,EAAcuC,aAAY,SAAApC,GAAK,OAAIA,EAAMqC,KAAKxC,eAE9CyC,GADgBF,aAAY,SAAApC,GAAK,OAAIA,EAAMqC,KAAK5C,iBACrC8C,eAOjB,OACC,eAACb,EAAD,CAAY9B,aAAcA,EAAcC,YAAaA,EAArD,UACC,wBAAQ2C,UAAU,QAAQC,QAP5B,WACCH,EAAS1B,GAAY,IACrB0B,EAASvC,EAAoB,MAK5B,eAGA,eAAC+B,EAAD,CAAYlC,aAAcA,EAAcC,YAAaA,EAArD,UACC,qBAAK2C,UAAU,eACf,sBAAKA,UAAU,aAAf,UACC,cAACT,EAAD,CAAUE,MAAM,IAAhB,eACA,cAACF,EAAD,CAAUE,MAAM,IAAhB,eACA,cAACF,EAAD,CAAUE,MAAM,IAAhB,eACA,cAACF,EAAD,CAAUE,MAAM,IAAhB,eACA,cAACF,EAAD,CAAUE,MAAM,KAAhB,gBACA,cAACF,EAAD,CAAUE,MAAM,KAAhB,gBACA,cAACF,EAAD,CAAUE,MAAM,KAAhB,gBACA,cAACF,EAAD,CAAUE,MAAM,KAAhB,gBACA,cAACF,EAAD,CAAUE,MAAM,KAAhB,gBACA,cAACF,EAAD,CAAUE,MAAM,IAAhB,eACA,cAACF,EAAD,CAAUE,MAAM,IAAhB,eACA,cAACF,EAAD,CAAUE,MAAM,IAAhB,yB,kCC9GLS,IAAMC,OAAOC,KAEb,IAAMC,EAAgBlB,IAAOC,IAAV,gNAUbkB,EAAgBnB,IAAOoB,QAAV,ouBAUhB,gBAAGC,EAAH,EAAGA,OAAH,8CAAiDA,EAAjD,eA6HYC,MAjGf,WAcC,IAbA,IAAMC,EAAad,aAAY,SAAApC,GAAK,OAAIA,EAAMmD,OAAOD,cAC/CE,EAAWhB,aAAY,SAAApC,GAAK,OAAIA,EAAMmD,OAAOC,YAC7CC,EAAQjB,aAAY,SAAApC,GAAK,OAAIA,EAAMqD,SACnCzD,EAAewC,aAAY,SAAApC,GAAK,OAAIA,EAAMJ,gBAC1CD,EAAeyC,aAAY,SAAApC,GAAK,OAAIA,EAAMqC,KAAK1C,gBAC/CF,EAAgB2C,aAAY,SAAApC,GAAK,OAAIA,EAAMqC,KAAK5C,iBAChD6C,EAAWC,cAEbe,EAAa,GAEjB,EAAgDC,mBAAS,IAAzD,mBAAO7D,EAAP,KAAyB8D,EAAzB,KAEIC,EAAI,EAEPH,EAAWI,KACVhB,IAAMQ,EAAY,QAChBS,IAAI,GAAKF,EAAG,UACZG,OAAO,SAENN,EAAWA,EAAW9C,OAAS,KAAO4C,GAC1CK,IAGD,SAASI,EAAkBC,GAE1B,GADAA,EAAEC,iBACgB,IAAdD,EAAEE,SAAkBF,EAAEG,OAAOC,UAAUC,SAAS,aAApD,CACAC,QAAQC,IAAIP,EAAEG,QACVrE,IACH0E,OAAOC,aAAa3E,GACpBF,EAAiB8E,SAAQ,SAAAC,GAAE,OAAIA,EAAGP,UAAUQ,OAAO,eACnDlB,EAAoB,KAGrB,MAAgCM,EAAEG,OAAOU,QAAjCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UACZC,EAAarF,EAAc4B,MAAK,SAAA0D,GAAI,OAAIA,EAAKH,WAAaA,GAAYG,EAAKF,YAAcA,KAE/F,GAAIC,GAAcnF,EACjB2C,EAASvC,EAAoBN,EAAcuF,OAAOvF,EAAcwF,QAAQ,CAACL,EAAUC,IAAa,UAC1F,IAAKC,IAAenF,EAAc,CACxC,IAAMuF,EAAOpB,EAAEG,OAAOkB,wBAChB5E,EAAO+D,OAAOc,WAAaF,EAAKG,MAAQ,IAAMvB,EAAEG,OAAOqB,WAAa,IAAMxB,EAAEG,OAAOqB,WAAa,GAChG7E,EAAMqD,EAAEG,OAAOsB,UAAY,GACjCjD,EAASvC,EAAoB,GAAD,mBAAKN,GAAL,CAAoB,CAAEmF,WAAUC,YAAWtE,OAAME,aAoB/E,OACC,eAACqC,EAAD,CACCE,OAAQM,EAAW9C,OACnBgF,YAnBF,SAA2B1B,GAC1BA,EAAEC,iBACED,EAAEG,OAAOC,UAAUC,SAAS,aAAa7B,EAAS3B,GAAmB,IACzEkD,EAAkBC,IAiBjB2B,YAAa5B,EACb6B,UAfF,WACK9F,IACJ0C,EAAS3B,GAAmB,IAC5B2B,EAAS1B,GAAY,IAChBnB,EAAce,QAClB8B,EAAS1B,GAAY,MAMtB,UAME0C,EAAWqC,KAAI,SAAAC,GAAI,OACnB,cAAC/C,EAAD,UAA2B+C,GAAPA,MAErB,cAAC,EAAD,IACCvC,EAAMsC,KAAI,YAEV,IAF+B,IAAlBpG,EAAiB,EAAjBA,KAAM2B,EAAW,EAAXA,KACb2E,EAAQ,GADgB,WAErBpC,GACR,IAAMqC,EAAWvG,EAAKwG,QAAQ,IAAK,IACnCF,EAAMnC,KACL,qBAEClB,UAAS,oBAAetB,EAAKoC,EAAWG,IAA/B,YACRhE,EAAc4B,MAAK,SAAA0D,GAAI,OAAIA,EAAKH,WAAakB,GAAYf,EAAKF,YAAcvB,EAAWG,OAAO,YAE/FuC,iBAAgBF,EAChBG,iBAAgB3C,EAAWG,GAN5B,gBAQEvC,QARF,IAQEA,OARF,EAQEA,EAAOoC,EAAWG,KARpB,UACSqC,EADT,YACqBxC,EAAWG,OAJzBA,EAAI,EAAGA,EAAIH,EAAW9C,OAAQiD,IAAM,EAApCA,GAeT,OAAOoC,SC/IIK,I,IAAAA,EAXf,WAGC,OAFc9D,aAAY,SAAApC,GAAK,OAAIA,EAAMqD,SAE5BsC,KAAI,SAAArE,GAAI,OACpB,eAAC,IAAM6E,SAAP,WACC,8BAAsB7E,EAAK/B,MAAjB+B,EAAK/B,MACf,8BAA0B+B,EAAKL,UAArBK,EAAKL,YAFKK,EAAK/B,UCHtB6G,EAAYzE,IAAOC,IAAV,uWAiBTyE,EAAY1E,IAAOC,IAAV,wLAOZ,SAAAC,GAAK,OACNA,EAAMZ,UAAN,2DAgBaqF,MAXf,WACC,OACC,eAACF,EAAD,WACC,cAACC,EAAD,mBACA,cAACA,EAAD,CAAWpF,UAAQ,EAAnB,sBACA,cAAC,EAAD,IACA,cAAC,EAAD,QCvCUsF,EAAcjH,YAAY,CACtCC,KAAM,SACNC,aAAc,CACb0D,WAAY,OACZE,SAAU,OACVoD,KAAM,MAEP1G,SAAU,CACT0B,SAAU,SAACxB,EAAOC,GACjBD,EAAMkD,WAAajD,EAAOC,QAAQgD,YAAclD,EAAMkD,WACtDlD,EAAMoD,SAAWnD,EAAOC,QAAQkD,UAAYpD,EAAMoD,UAEnD3B,QAAS,SAACzB,EAAOC,GAChBD,EAAMwG,KAAOvG,EAAOC,YAKhB,EAA8BqG,EAAYzF,QAElCyF,GAFR,EAAQ/E,SAAR,EAAkBC,QAEV8E,EAAf,SCjBeE,cAAe,CAC7BC,QAAS,CACRvD,OAAQwD,EACRtE,KAAMuE,EACNvD,MAAOwD,KCSMC,MAXf,WACC,OACC,eAAC,IAAD,CAAUC,MAAOA,EAAjB,UACC,cAAC,EAAD,IACA,+BACC,cAAC,EAAD,UCAWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.e5de817a.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n\treturn (\n\t\t<header>\n\t\t\t<h1>Rounds</h1>\n\t\t\t<hr />\n\t\t</header>\n\t);\n}\n\nexport default Header;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const gridSlice = createSlice({\n\tname: 'grid',\n\tinitialState: {\n\t\tselectedCells: [],\n\t\trecentlySelected: [],\n\t\tdeselectMode: false,\n\t\tmodalVisible: false,\n\t\tmodalOffset: [0, 0],\n\t},\n\treducers: {\n\t\tupdateSelectedCells: (state, action) => {\n\t\t\tstate.selectedCells = action.payload;\n\t\t\tconst sorted = action.payload.sort((a, b) => b.left - a.left);\n\t\t\tif (sorted.length) state.modalOffset = [sorted[0].top, sorted[0].left];\n\t\t},\n\t\tupdateRecentlySelected: (state, action) => {\n\t\t\tstate.recentlySelected = action.payload;\n\t\t},\n\t\ttoggleDeselectMode: (state, action) => {\n\t\t\tstate.deselectMode = action.payload;\n\t\t},\n\t\ttoggleModal: (state, action) => {\n\t\t\tstate.modalVisible = action.payload;\n\t\t},\n\t\tupdateModalOffset: (state, action) => {\n\t\t\tstate.modalOffset = action.payload;\n\t\t},\n\t},\n});\n\nexport const { updateSelectedCells, updateRecentlySelected, toggleDeselectMode, toggleModal, updateModalOffset } =\n\tgridSlice.actions;\n\nexport default gridSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const unitSlice = createSlice({\n\tname: 'units',\n\tinitialState: [\n\t\t{\n\t\t\tid: 1,\n\t\t\tname: 'Unit 01',\n\t\t\tlocation: 1,\n\t\t\tdata: {\n\t\t\t\t2200: 'S',\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tname: 'Unit 02',\n\t\t\tlocation: 2,\n\t\t\tdata: {},\n\t\t},\n\t],\n\treducers: {\n\t\tupdateLocation: (state, action) => {\n\t\t\tstate.find(unit => unit.id === action.payload.id).location = action.payload.location;\n\t\t},\n\t\tupdateData: (state, action) => {\n\t\t\tstate.find(unit => unit.id === action.payload.id).data = { ...state.data, ...action.payload };\n\t\t},\n\t},\n});\n\nexport const { setShift, setArea } = unitSlice.actions;\n\nexport default unitSlice.reducer;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateData } from '../utils/unitReducer';\nimport { updateSelectedCells, toggleModal } from '../utils/gridReducer';\n\nfunction modalColor(props) {\n\tswitch (props.value) {\n\t\tcase 'S':\n\t\t\treturn `lightskyblue`;\n\t\tcase 'A':\n\t\t\treturn `yellow`;\n\t\tcase 'R':\n\t\t\treturn `lightgreen`;\n\t\tcase 'SN':\n\t\tcase 'ST':\n\t\tcase 'SW':\n\t\t\treturn `rgb(0, 230, 230)`;\n\t\tcase 'NM':\n\t\t\treturn `white`;\n\t\tcase 'GT':\n\t\t\treturn `beige`;\n\t\tcase 'B':\n\t\tcase 'ES':\n\t\t\treturn `white`;\n\t\tcase 'D':\n\t\t\treturn `red`;\n\t\tcase 'M':\n\t\t\treturn `lightgray`;\n\t\tcase 'I':\n\t\t\treturn `rgb(173, 230, 61)`;\n\t\tcase 'V':\n\t\tcase 'H':\n\t\tcase 'AW':\n\t\tcase 'DT':\n\t\t\treturn 'white';\n\t\tdefault:\n\t\t\treturn 'white';\n\t}\n}\n\nconst ModalFrame = styled.div`\n\tdisplay: ${props => (props.modalVisible ? 'block' : 'none')};\n\twidth: max-content;\n\tposition: absolute;\n\tbox-sizing: border-box;\n\t${({ modalVisible, modalOffset }) =>\n\t\tmodalVisible &&\n\t\t`top: ${modalOffset[0]}px;\n\t\tleft: ${modalOffset[1]}px;`}\n\n\t.close {\n\t\ttext-align: center;\n\t\tfont-size: 1.2rem;\n\t\tbackground-color: #777777;\n\t\tborder-radius: 10px 10px 0 0;\n\t\tcolor: white;\n\t\tpadding: 10px 10px 0 10px;\n\t\twidth: min-content;\n\t\theight: min-content;\n\t\tborder: 0;\n\t\tcursor: pointer;\n\t}\n`;\n\nconst InputModal = styled.div`\n\tbackground-color: #777777;\n\tborder-radius: 0 10px 10px 10px;\n\tcolor: white;\n\tpadding: 15px;\n\n\t.modal-body {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 35px 35px;\n\t\tgrid-auto-rows: 35px;\n\t}\n`;\n\nconst Selector = styled.button`\n\tfont-size: 16px;\n\tfont-weight: bold;\n\tbackground-color: #282828;\n\tborder: 0.5px solid black;\n\theight: 100%;\n\twidth: 100%;\n\ttext-align: center;\n\toutline: none;\n\tbox-sizing: border-box;\n\tcursor: pointer;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tborder-radius: 5px;\n\tcolor: ${props => modalColor(props)};\n`;\n\nfunction GridModal() {\n\tconst modalVisible = useSelector(state => state.grid.modalVisible);\n\tconst modalOffset = useSelector(state => state.grid.modalOffset);\n\tconst selectedCells = useSelector(state => state.grid.selectedCells);\n\tconst dispatch = useDispatch();\n\n\tfunction clearModal() {\n\t\tdispatch(toggleModal(false));\n\t\tdispatch(updateSelectedCells([]));\n\t}\n\n\treturn (\n\t\t<ModalFrame modalVisible={modalVisible} modalOffset={modalOffset}>\n\t\t\t<button className='close' onClick={clearModal}>\n\t\t\t\tX\n\t\t\t</button>\n\t\t\t<InputModal modalVisible={modalVisible} modalOffset={modalOffset}>\n\t\t\t\t<div className='modal-info'></div>\n\t\t\t\t<div className='modal-body'>\n\t\t\t\t\t<Selector value='S'>S</Selector>\n\t\t\t\t\t<Selector value='A'>A</Selector>\n\t\t\t\t\t<Selector value='R'>R</Selector>\n\t\t\t\t\t<Selector value='B'>B</Selector>\n\t\t\t\t\t<Selector value='SN'>SN</Selector>\n\t\t\t\t\t<Selector value='ST'>ST</Selector>\n\t\t\t\t\t<Selector value='GT'>GT</Selector>\n\t\t\t\t\t<Selector value='NM'>NM</Selector>\n\t\t\t\t\t<Selector value='SW'>SW</Selector>\n\t\t\t\t\t<Selector value='D'>D</Selector>\n\t\t\t\t\t<Selector value='M'>M</Selector>\n\t\t\t\t\t<Selector value='I'>I</Selector>\n\t\t\t\t</div>\n\t\t\t</InputModal>\n\t\t</ModalFrame>\n\t);\n}\n\nexport default GridModal;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n\tupdateSelectedCells,\n\tupdateRecentlySelected,\n\ttoggleDeselectMode,\n\ttoggleModal,\n\tupdateModalOffset,\n} from '../utils/gridReducer';\n\nimport GridModal from './GridModal';\n\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\n\ndayjs.extend(customParseFormat);\n\nconst GridTimestamp = styled.div`\n\tbackground-color: lightgray;\n\tborder: 0.5px solid black;\n\twriting-mode: vertical-lr;\n\ttext-align: center;\n\tfont-size: 1.5em;\n\theight: 100%;\n\tbox-sizing: border-box;\n`;\n\nconst StyledSubgrid = styled.section`\n\tdisplay: grid;\n\tgrid-column-start: 3;\n\tgrid-column-end: -1;\n\tgrid-row-start: 1;\n\tgrid-row-end: -1;\n\toverflow: scroll;\n\tborder: none;\n\tjustify-content: left;\n\tposition: relative;\n\t${({ checks }) => `grid-template-columns: repeat(${checks}, 35px);`}\n\tgrid-template-rows: 100px repeat(10, 35px);\n\n\t.grid-item {\n\t\ttext-align: center;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tfont-size: 16px;\n\t\tfont-weight: bold;\n\t\tbackground-color: #282828;\n\t\tborder: 0.5px solid black;\n\t\tbox-sizing: border-box;\n\t\tcursor: pointer;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tborder-radius: 5px;\n\t}\n\n\t.grid-item:hover {\n\t\tborder: white 2px dotted;\n\t}\n\n\t.selected {\n\t\tborder: yellow 2px dashed;\n\t}\n`;\n\nfunction Subgrid() {\n\tconst shiftStart = useSelector(state => state.config.shiftStart);\n\tconst shiftEnd = useSelector(state => state.config.shiftEnd);\n\tconst units = useSelector(state => state.units);\n\tconst modalVisible = useSelector(state => state.modalVisible);\n\tconst deselectMode = useSelector(state => state.grid.deselectMode);\n\tconst selectedCells = useSelector(state => state.grid.selectedCells);\n\tconst dispatch = useDispatch();\n\n\tlet timestamps = [];\n\n\tconst [recentlySelected, setRecentlySelected] = useState([]);\n\n\tlet i = 0;\n\twhile (true) {\n\t\ttimestamps.push(\n\t\t\tdayjs(shiftStart, 'HHmm')\n\t\t\t\t.add(15 * i, 'minute')\n\t\t\t\t.format('HHmm')\n\t\t);\n\t\tif (timestamps[timestamps.length - 1] === shiftEnd) break;\n\t\ti++;\n\t}\n\n\tfunction gridSelectorMouse(e) {\n\t\te.preventDefault();\n\t\tif (e.buttons !== 1 || !e.target.classList.contains('grid-item')) return;\n\t\tconsole.log(e.target);\n\t\tif (modalVisible) {\n\t\t\twindow.clearTimeout(modalVisible);\n\t\t\trecentlySelected.forEach(el => el.classList.remove('selected'));\n\t\t\tsetRecentlySelected([]);\n\t\t}\n\n\t\tconst { unitName, timestamp } = e.target.dataset;\n\t\tconst isSelected = selectedCells.find(cell => cell.unitName === unitName && cell.timestamp === timestamp);\n\n\t\tif (isSelected && deselectMode) {\n\t\t\tdispatch(updateSelectedCells(selectedCells.splice(selectedCells.indexOf([unitName, timestamp]), 1)));\n\t\t} else if (!isSelected && !deselectMode) {\n\t\t\tconst rect = e.target.getBoundingClientRect();\n\t\t\tconst left = window.innerWidth - rect.right < 350 ? e.target.offsetLeft - 165 : e.target.offsetLeft + 65;\n\t\t\tconst top = e.target.offsetTop - 50;\n\t\t\tdispatch(updateSelectedCells([...selectedCells, { unitName, timestamp, left, top }]));\n\t\t}\n\t}\n\n\tfunction selectToggleMouse(e) {\n\t\te.preventDefault();\n\t\tif (e.target.classList.contains('selected')) dispatch(toggleDeselectMode(true));\n\t\tgridSelectorMouse(e);\n\t}\n\n\tfunction renderInputModal() {\n\t\tif (modalVisible) return;\n\t\tdispatch(toggleDeselectMode(false));\n\t\tdispatch(toggleModal(true));\n\t\tif (!selectedCells.length) {\n\t\t\tdispatch(toggleModal(false));\n\t\t\treturn;\n\t\t}\n\t}\n\n\treturn (\n\t\t<StyledSubgrid\n\t\t\tchecks={timestamps.length}\n\t\t\tonMouseDown={selectToggleMouse}\n\t\t\tonMouseOver={gridSelectorMouse}\n\t\t\tonMouseUp={renderInputModal}\n\t\t>\n\t\t\t{timestamps.map(time => (\n\t\t\t\t<GridTimestamp key={time}>{time}</GridTimestamp>\n\t\t\t))}\n\t\t\t<GridModal />\n\t\t\t{units.map(({ name, data }) => {\n\t\t\t\tconst cells = [];\n\t\t\t\tfor (let i = 0; i < timestamps.length; i++) {\n\t\t\t\t\tconst nameCode = name.replace(' ', '');\n\t\t\t\t\tcells.push(\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={`${nameCode}-${timestamps[i]}`}\n\t\t\t\t\t\t\tclassName={`grid-item ${data[timestamps[i]]} ${\n\t\t\t\t\t\t\t\tselectedCells.find(cell => cell.unitName === nameCode && cell.timestamp === timestamps[i]) && 'selected'\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\tdata-unit-name={nameCode}\n\t\t\t\t\t\t\tdata-timestamp={timestamps[i]}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{data?.[timestamps[i]]}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn cells;\n\t\t\t})}\n\t\t</StyledSubgrid>\n\t);\n}\n\nexport default Subgrid;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nfunction NameList() {\n\tconst units = useSelector(state => state.units);\n\n\treturn units.map(unit => (\n\t\t<React.Fragment key={unit.name}>\n\t\t\t<div key={unit.name}>{unit.name}</div>\n\t\t\t<div key={unit.location}>{unit.location}</div>\n\t\t</React.Fragment>\n\t));\n}\n\nexport default NameList;\n","import React from 'react';\nimport Subgrid from './Subgrid';\nimport NameList from './NameList';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n\tdisplay: grid;\n\twidth: 100%;\n\tgrid-template-columns: 200px 35px 1fr;\n\tgrid-template-rows: 100px repeat(10, 35px);\n\tbackground-color: #282828;\n\toverflow: scroll;\n\n\t& > div {\n\t\tborder: 0.5px solid white;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tbox-sizing: border-box;\n\t}\n`;\n\nconst GridLabel = styled.div`\n\tborder: 0.5px solid white;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tbox-sizing: border-box;\n\tfont-size: 2.5rem;\n\t${props =>\n\t\tprops.location &&\n\t\t`writing-mode: vertical-lr;\n        font-size: 1.3em;`}\n`;\n\nfunction GridContainer() {\n\treturn (\n\t\t<Container>\n\t\t\t<GridLabel>Name</GridLabel>\n\t\t\t<GridLabel location>Location</GridLabel>\n\t\t\t<Subgrid />\n\t\t\t<NameList />\n\t\t</Container>\n\t);\n}\n\nexport default GridContainer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const configSlice = createSlice({\n\tname: 'config',\n\tinitialState: {\n\t\tshiftStart: '2200',\n\t\tshiftEnd: '0700',\n\t\tarea: null,\n\t},\n\treducers: {\n\t\tsetShift: (state, action) => {\n\t\t\tstate.shiftStart = action.payload.shiftStart || state.shiftStart;\n\t\t\tstate.shiftEnd = action.payload.shiftEnd || state.shiftEnd;\n\t\t},\n\t\tsetArea: (state, action) => {\n\t\t\tstate.area = action.payload;\n\t\t},\n\t},\n});\n\nexport const { setShift, setArea } = configSlice.actions;\n\nexport default configSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport configReducer from './configReducer';\nimport unitReducer from './unitReducer';\nimport gridReducer from './gridReducer';\n\nexport default configureStore({\n\treducer: {\n\t\tconfig: configReducer,\n\t\tgrid: gridReducer,\n\t\tunits: unitReducer,\n\t},\n});\n","import './App.css';\nimport Header from './components/Header';\nimport GridContainer from './components/GridContainer';\n\nimport { Provider } from 'react-redux';\nimport store from './utils/globalState';\n\nfunction App() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Header />\n\t\t\t<main>\n\t\t\t\t<GridContainer />\n\t\t\t</main>\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}