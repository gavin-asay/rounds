{"version":3,"sources":["components/Header.js","utils/gridReducer.js","utils/unitReducer.js","utils/helpers.js","components/GridModal.js","components/TimeDropDown.js","components/Subgrid.js","components/NameList.js","components/GridContainer.js","utils/configReducer.js","utils/globalState.js","App.js","reportWebVitals.js","index.js"],"names":["Header","gridSlice","createSlice","name","initialState","selectedCells","recentlySelected","deselectMode","modalVisible","modalOffset","dropdownTime","timeDropdownOffset","reducers","updateSelectedCells","state","action","console","log","payload","sorted","sort","a","b","left","length","top","shiftToRecent","updateRecentlySelected","toggleDeselectMode","toggleModal","updateModalOffset","updateDropdownTime","updateTimeDropdownOffset","actions","unitSlice","id","location","data","2200","value","user","inputTime","updateLocation","find","unit","updateData","Object","entries","forEach","item","replace","assign","modalColor","props","keyInput","ModalFrame","styled","div","InputModal","Selector","button","GridModal","useSelector","grid","validCodes","dispatch","useDispatch","gridInputHandler","e","target","textContent","window","modalHide","clearTimeout","match","newData","reduce","dataset","cell","unitName","timestamp","dayjs","format","revisedData","setTimeout","cb","callbackRef","useRef","useEffect","current","keyCheck","metaKey","ctrlKey","key","test","toUpperCase","document","addEventListener","removeEventListener","useKeydown","className","onClick","extend","customParseFormat","TimeDropdownMenu","MenuItem","TimeDropdown","unitData","units","timeDropdownHide","previousTime","subtract","unitState","GridTimestamp","StyledSubgrid","section","checks","GridItem","Subgrid","shiftStart","config","shiftEnd","timestamps","i","push","add","gridSelectorMouse","preventDefault","buttons","classList","contains","filter","rect","getBoundingClientRect","innerWidth","right","offsetLeft","offsetTop","gridSelectorTouch","realTarget","elementFromPoint","nativeEvent","changedTouches","clientX","clientY","touches","isSelected","every","dataCells","map","cells","nameCode","data-unit-name","data-timestamp","onMouseDown","onMouseOver","onTouchStart","onTouchMove","onTouchEnd","drop","parentElement","timeColumn","flat","Math","round","time","data-drop","NameList","Fragment","Container","GridLabel","GridContainer","configSlice","area","setShift","setArea","configureStore","reducer","configReducer","gridReducer","unitReducer","App","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9b453044.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n\treturn (\n\t\t<header>\n\t\t\t<h1>Rounds</h1>\n\t\t\t<hr />\n\t\t</header>\n\t);\n}\n\nexport default Header;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const gridSlice = createSlice({\n\tname: 'grid',\n\tinitialState: {\n\t\tselectedCells: [],\n\t\trecentlySelected: [],\n\t\tdeselectMode: false,\n\t\tmodalVisible: false,\n\t\tmodalOffset: [0, 0],\n\t\tdropdownTime: '',\n\t\ttimeDropdownOffset: [0, 0],\n\t},\n\treducers: {\n\t\tupdateSelectedCells: (state, action) => {\n\t\t\tconsole.log(action.payload);\n\t\t\tstate.selectedCells = action.payload;\n\t\t\tconst sorted = action.payload.sort((a, b) => b.left - a.left);\n\t\t\tif (sorted.length) state.modalOffset = [sorted[0].top, sorted[0].left];\n\t\t},\n\t\tshiftToRecent: state => {\n\t\t\tstate.recentlySelected = state.selectedCells;\n\t\t\tstate.selectedCells = [];\n\t\t},\n\t\tupdateRecentlySelected: (state, action) => {\n\t\t\tstate.recentlySelected = action.payload;\n\t\t},\n\t\ttoggleDeselectMode: (state, action) => {\n\t\t\tstate.deselectMode = action.payload;\n\t\t},\n\t\ttoggleModal: (state, action) => {\n\t\t\tstate.modalVisible = action.payload;\n\t\t},\n\t\tupdateModalOffset: (state, action) => {\n\t\t\tstate.modalOffset = action.payload;\n\t\t},\n\t\tupdateDropdownTime: (state, action) => {\n\t\t\tstate.dropdownTime = action.payload;\n\t\t},\n\t\tupdateTimeDropdownOffset: (state, action) => {\n\t\t\tstate.timeDropdownOffset = action.payload;\n\t\t},\n\t},\n});\n\nexport const {\n\tupdateSelectedCells,\n\tshiftToRecent,\n\tupdateRecentlySelected,\n\ttoggleDeselectMode,\n\ttoggleModal,\n\tupdateModalOffset,\n\tupdateDropdownTime,\n\tupdateTimeDropdownOffset,\n} = gridSlice.actions;\n\nexport default gridSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const unitSlice = createSlice({\n\tname: 'units',\n\tinitialState: [\n\t\t{\n\t\t\tid: 1,\n\t\t\tname: 'Unit 01',\n\t\t\tlocation: 1,\n\t\t\tdata: {\n\t\t\t\t2200: {\n\t\t\t\t\tvalue: 'S',\n\t\t\t\t\tuser: 'gavinasay',\n\t\t\t\t\tinputTime: '',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tname: 'Unit 02',\n\t\t\tlocation: 2,\n\t\t\tdata: {},\n\t\t},\n\t],\n\treducers: {\n\t\tupdateLocation: (state, action) => {\n\t\t\tstate.find(unit => unit.id === action.payload.id).location = action.payload.location;\n\t\t},\n\t\tupdateData: (state, action) => {\n\t\t\tconst newData = Object.entries(action.payload);\n\t\t\tnewData.forEach(data => {\n\t\t\t\tconst unit = state.find(item => item.name.replace(' ', '') === data[0]);\n\t\t\t\tunit.data = Object.assign(unit.data, data[1]);\n\t\t\t});\n\t\t},\n\t},\n});\n\nexport const { updateLocation, updateData } = unitSlice.actions;\n\nexport default unitSlice.reducer;\n","export function modalColor(props) {\n\tswitch (props.value) {\n\t\tcase 'S':\n\t\t\treturn `lightskyblue`;\n\t\tcase 'A':\n\t\t\treturn `yellow`;\n\t\tcase 'R':\n\t\t\treturn `lightgreen`;\n\t\tcase 'SN':\n\t\tcase 'ST':\n\t\tcase 'SW':\n\t\t\treturn `rgb(0, 230, 230)`;\n\t\tcase 'NM':\n\t\t\treturn `white`;\n\t\tcase 'GT':\n\t\t\treturn `beige`;\n\t\tcase 'B':\n\t\tcase 'ES':\n\t\t\treturn `white`;\n\t\tcase 'D':\n\t\t\treturn `red`;\n\t\tcase 'M':\n\t\t\treturn `lightgray`;\n\t\tcase 'I':\n\t\t\treturn `rgb(173, 230, 61)`;\n\t\tcase 'V':\n\t\tcase 'H':\n\t\tcase 'AW':\n\t\tcase 'DT':\n\t\t\treturn 'white';\n\t\tdefault:\n\t\t\treturn 'white';\n\t}\n}\n","import React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateData } from '../utils/unitReducer';\nimport { updateSelectedCells, shiftToRecent, updateRecentlySelected, toggleModal } from '../utils/gridReducer';\n\nimport dayjs from 'dayjs';\n\nimport { modalColor } from '../utils/helpers';\n\nlet keyInput = '';\nfunction useKeydown(validCodes, modalVisible, cb) {\n\t// using event listeners on document is tricky\n\t// you run the risk of adding a duplicate listener on every re-render, and you get huge slowdowns\n\tconst callbackRef = useRef(cb);\n\n\tuseEffect(() => {\n\t\t// refresh the callback to avoid stale data\n\t\tcallbackRef.current = cb;\n\t}, [cb]);\n\n\tuseEffect(() => {\n\t\tfunction keyCheck(e) {\n\t\t\tif (!modalVisible) return;\n\t\t\tif (e.metaKey || e.ctrlKey) return;\n\n\t\t\tif (e.key === 'Backspace' || e.key === 'Delete') {\n\t\t\t\twindow.clearTimeout(window.modalHide);\n\t\t\t\tcb(e, e.key);\n\t\t\t}\n\n\t\t\t// we check a handful of cases and evaluate the validity of recent input across multiple event firings\n\t\t\tif (keyInput.length === 0 && validCodes.test(e.key.toUpperCase())) keyInput += e.key.toUpperCase();\n\t\t\telse if (keyInput.length === 1 && validCodes.test(keyInput + e.key.toUpperCase()))\n\t\t\t\tkeyInput += e.key.toUpperCase();\n\t\t\telse if (keyInput.length === 1 && !validCodes.test(keyInput + e.key.toUpperCase()))\n\t\t\t\tkeyInput = e.key.toUpperCase();\n\t\t\telse if (keyInput.length === 2 && validCodes.test(e.key.toUpperCase())) {\n\t\t\t\tkeyInput = '';\n\t\t\t\tkeyInput += e.key.toUpperCase();\n\t\t\t}\n\n\t\t\twindow.clearTimeout(window.modalHide);\n\t\t\t// later we'll see that cb is gridInputHandler(), which also handles click events on the modal\n\t\t\tcb(e, keyInput);\n\t\t} // listener is added when this component is mounted/rendered\n\t\tdocument.addEventListener('keydown', keyCheck);\n\t\t// listener is removed when this component is unmounted/unrendered\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('keydown', keyCheck);\n\t\t};\n\t});\n}\n\nconst ModalFrame = styled.div`\n\twidth: max-content;\n\tposition: absolute;\n\tbox-sizing: border-box;\n\t${({ modalOffset }) =>\n\t\t`top: ${modalOffset[0]}px;\n\t\tleft: ${modalOffset[1]}px;`}\n\n\t.close {\n\t\ttext-align: center;\n\t\tfont-size: 1.2rem;\n\t\tbackground-color: #777777;\n\t\tborder-radius: 10px 10px 0 0;\n\t\tcolor: white;\n\t\tpadding: 10px 10px 0 10px;\n\t\twidth: min-content;\n\t\theight: min-content;\n\t\tborder: 0;\n\t\tcursor: pointer;\n\t}\n`;\n\nconst InputModal = styled.div`\n\tbackground-color: #777777;\n\tborder-radius: 0 10px 10px 10px;\n\tcolor: white;\n\tpadding: 15px;\n\n\t.modal-body {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 35px 35px;\n\t\tgrid-auto-rows: 35px;\n\t}\n`;\n\nconst Selector = styled.button`\n\tfont-size: 16px;\n\tfont-weight: bold;\n\tbackground-color: #282828;\n\tborder: 0.5px solid black;\n\theight: 100%;\n\twidth: 100%;\n\ttext-align: center;\n\toutline: none;\n\tbox-sizing: border-box;\n\tcursor: pointer;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tborder-radius: 5px;\n\tcolor: ${props => modalColor(props)};\n`;\n\nfunction GridModal() {\n\tconst modalVisible = useSelector(state => state.grid.modalVisible);\n\tconst modalOffset = useSelector(state => state.grid.modalOffset);\n\tconst selectedCells = useSelector(state => state.grid.selectedCells);\n\tconst recentlySelected = useSelector(state => state.grid.recentlySelected);\n\tconst validCodes = /^[ABDHIMORSV]{1}$|^SN$|^ST$|^SW$|^NM$|^GT$|^AW$|^ES$/;\n\tconst dispatch = useDispatch();\n\n\t// const hiddenInput = useRef(null);\n\t// let [keyInput, setKeyInput] = useState('');\n\n\tfunction clearModal() {\n\t\tdispatch(toggleModal(false));\n\t\tdispatch(updateSelectedCells([]));\n\t}\n\n\tfunction gridInputHandler(e, value = e.target.textContent) {\n\t\tconsole.log(e);\n\t\tif (window.modalHide) window.clearTimeout(window.modalHide);\n\t\tif (!value.match(validCodes)) return;\n\n\t\tif (selectedCells.length) {\n\t\t\tconst newData = selectedCells.reduce((dataset, cell) => {\n\t\t\t\tif (!dataset[cell.unitName]) dataset[cell.unitName] = {};\n\t\t\t\tdataset[cell.unitName][cell.timestamp] = {\n\t\t\t\t\tvalue,\n\t\t\t\t\tuser: 'gavinasay',\n\t\t\t\t\tinputTime: dayjs().format('HH:mm:ss.SSS'),\n\t\t\t\t};\n\t\t\t\treturn dataset;\n\t\t\t}, {});\n\n\t\t\tdispatch(updateData(newData));\n\t\t\tdispatch(shiftToRecent());\n\t\t} else {\n\t\t\tconst revisedData = recentlySelected.reduce((dataset, cell) => {\n\t\t\t\tif (!dataset[cell.unitName]) dataset[cell.unitName] = {};\n\t\t\t\tdataset[cell.unitName][cell.timestamp] = {\n\t\t\t\t\tvalue,\n\t\t\t\t\tuser: 'gavinasay',\n\t\t\t\t\tinputTime: dayjs().format('HH:mm:ss.SSS'),\n\t\t\t\t};\n\t\t\t\treturn dataset;\n\t\t\t}, {});\n\n\t\t\tdispatch(updateData(revisedData));\n\t\t}\n\n\t\twindow.modalHide = setTimeout(() => {\n\t\t\tdispatch(updateRecentlySelected([]));\n\t\t\tdispatch(toggleModal(false));\n\t\t\tkeyInput = '';\n\t\t}, 5000);\n\t}\n\n\tuseKeydown(validCodes, modalVisible, gridInputHandler);\n\n\treturn (\n\t\t<ModalFrame modalOffset={modalOffset} modalVisible={modalVisible}>\n\t\t\t<button className='close' onClick={clearModal}>\n\t\t\t\tX\n\t\t\t</button>\n\t\t\t<InputModal>\n\t\t\t\t<div className='modal-info'></div>\n\t\t\t\t<div className='modal-body' onClick={gridInputHandler}>\n\t\t\t\t\t<Selector value='S'>S</Selector>\n\t\t\t\t\t<Selector value='A'>A</Selector>\n\t\t\t\t\t<Selector value='R'>R</Selector>\n\t\t\t\t\t<Selector value='B'>B</Selector>\n\t\t\t\t\t<Selector value='SN'>SN</Selector>\n\t\t\t\t\t<Selector value='ST'>ST</Selector>\n\t\t\t\t\t<Selector value='GT'>GT</Selector>\n\t\t\t\t\t<Selector value='NM'>NM</Selector>\n\t\t\t\t\t<Selector value='SW'>SW</Selector>\n\t\t\t\t\t<Selector value='D'>D</Selector>\n\t\t\t\t\t<Selector value='M'>M</Selector>\n\t\t\t\t\t<Selector value='I'>I</Selector>\n\t\t\t\t</div>\n\t\t\t</InputModal>\n\t\t</ModalFrame>\n\t);\n}\n\nexport default GridModal;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { shiftToRecent, updateRecentlySelected, updateDropdownTime } from '../utils/gridReducer';\nimport { updateData } from '../utils/unitReducer';\n\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\n\ndayjs.extend(customParseFormat);\n\nconst TimeDropdownMenu = styled.div`\n\tbackground-color: #777777;\n\tborder-radius: 10px;\n\tpadding: 10px;\n\tposition: absolute;\n\twidth: max-content;\n\tleft: ${props => `${props.timeDropdownOffset[1]}px;`};\n`;\n\nconst MenuItem = styled.button`\n\tcolor: white;\n\tlist-style-type: none;\n\tbackground-color: #777777;\n\tborder: none;\n`;\n\nfunction TimeDropdown() {\n\tconst unitData = useSelector(state => state.units);\n\tconst selectedCells = useSelector(state => state.grid.selectedCells);\n\tconst timeDropdownOffset = useSelector(state => state.grid.timeDropdownOffset);\n\tconst dropdownTime = useSelector(state => state.grid.dropdownTime);\n\tconst dispatch = useDispatch();\n\n\tfunction repeat(e) {\n\t\twindow.timeDropdownHide = null;\n\t\tdispatch(updateRecentlySelected([]));\n\n\t\tconst previousTime = dayjs(dropdownTime, 'HHmm').subtract(15, 'minute').format('HHmm');\n\t\tconst newData = selectedCells.reduce((dataset, cell) => {\n\t\t\tconst unitState = unitData.find(unit => unit.name.replace(' ', '') === cell.unitName);\n\n\t\t\tif (!dataset[cell.unitName]) dataset[cell.unitName] = {};\n\t\t\tdataset[cell.unitName][cell.timestamp] = {\n\t\t\t\tvalue: unitState.data?.[previousTime]?.value,\n\t\t\t\tuser: 'gavinasay',\n\t\t\t\tinputTime: dayjs().format('HH:mm:ss.SSS'),\n\t\t\t};\n\t\t\treturn dataset;\n\t\t}, {});\n\n\t\tdispatch(updateData(newData));\n\t\tdispatch(shiftToRecent());\n\n\t\twindow.timeDropdownHide = setTimeout(() => {\n\t\t\tdispatch(updateDropdownTime(''));\n\t\t\tdispatch(updateRecentlySelected([]));\n\t\t}, 5000);\n\t}\n\n\treturn (\n\t\t<TimeDropdownMenu timeDropdownOffset={timeDropdownOffset}>\n\t\t\t<MenuItem onClick={repeat}>Repeat last check</MenuItem>\n\t\t</TimeDropdownMenu>\n\t);\n}\n\nexport default TimeDropdown;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n\tupdateSelectedCells,\n\tupdateRecentlySelected,\n\ttoggleDeselectMode,\n\ttoggleModal,\n\tupdateDropdownTime,\n\tupdateTimeDropdownOffset,\n\tupdateModalOffset,\n} from '../utils/gridReducer';\n\nimport GridModal from './GridModal';\nimport TimeDropdown from './TimeDropDown';\n\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\nimport { modalColor } from '../utils/helpers';\n\ndayjs.extend(customParseFormat);\n\nconst GridTimestamp = styled.div`\n\tbackground-color: lightgray;\n\tborder: 0.5px solid black;\n\twriting-mode: vertical-lr;\n\ttext-align: center;\n\tfont-size: 1.5rem;\n\theight: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\talign-items: center;\n\tflex-wrap: wrap;\n\n\tdiv {\n\t\theight: min-content;\n\t\twidth: min-content;\n\t\tmargin-top: 0.5rem;\n\t}\n\n\tp {\n\t\tmargin: 0;\n\t\twriting-mode: initial;\n\t\ttext-align: center;\n\t\tmargin: 0 auto;\n\t\tcursor: pointer;\n\t}\n`;\n\nconst StyledSubgrid = styled.section`\n\tdisplay: grid;\n\tgrid-column-start: 3;\n\tgrid-column-end: -1;\n\tgrid-row-start: 1;\n\tgrid-row-end: -1;\n\toverflow: scroll;\n\tborder: none;\n\tjustify-content: left;\n\tposition: relative;\n\t${({ checks }) => `grid-template-columns: repeat(${checks}, 35px);`}\n\tgrid-template-rows: 100px repeat(10, 35px);\n`;\n\nconst GridItem = styled.div`\n\ttext-align: center;\n\theight: 100%;\n\twidth: 100%;\n\tfont-size: 16px;\n\tfont-weight: bold;\n\tbackground-color: #282828;\n\tborder: 0.5px solid black;\n\tbox-sizing: border-box;\n\tcursor: pointer;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tborder-radius: 5px;\n\tcolor: ${props => modalColor(props)};\n\n\t&:hover {\n\t\tborder: white 2px dotted;\n\t}\n\n\t&.selected {\n\t\tborder: yellow 2px dashed;\n\t}\n\n\t&.selected:hover {\n\t\tborder: rgb(245, 199, 26) 1px dashed;\n\t}\n`;\n\nfunction Subgrid() {\n\tconst shiftStart = useSelector(state => state.config.shiftStart);\n\tconst shiftEnd = useSelector(state => state.config.shiftEnd);\n\tconst units = useSelector(state => state.units);\n\tconst modalVisible = useSelector(state => state.grid.modalVisible);\n\tconst deselectMode = useSelector(state => state.grid.deselectMode);\n\tconst selectedCells = useSelector(state => state.grid.selectedCells);\n\tconst recentlySelected = useSelector(state => state.grid.recentlySelected);\n\tconst dropdownTime = useSelector(state => state.grid.dropdownTime);\n\tconst dispatch = useDispatch();\n\n\tlet timestamps = [];\n\n\tlet i = 0;\n\twhile (true) {\n\t\ttimestamps.push(\n\t\t\tdayjs(shiftStart, 'HHmm')\n\t\t\t\t.add(15 * i, 'minute')\n\t\t\t\t.format('HHmm')\n\t\t);\n\t\tif (timestamps[timestamps.length - 1] === shiftEnd) break;\n\t\ti++;\n\t}\n\n\tfunction gridSelectorMouse(e) {\n\t\te.preventDefault();\n\t\tif (e.buttons !== 1 || !e.target.classList.contains('grid-item')) return;\n\t\tif (recentlySelected.length) {\n\t\t\twindow.clearTimeout(window.modalHide);\n\t\t\tdispatch(updateRecentlySelected([]));\n\t\t}\n\n\t\tconst { unitName, timestamp } = e.target.dataset;\n\t\tconst isSelected = selectedCells.find(cell => cell.unitName === unitName && cell.timestamp === timestamp);\n\n\t\tif (isSelected) {\n\t\t\tdispatch(toggleDeselectMode(true));\n\t\t\tdispatch(\n\t\t\t\tupdateSelectedCells(selectedCells.filter(cell => cell.timestamp !== timestamp || cell.unitName !== unitName))\n\t\t\t);\n\t\t} else {\n\t\t\tconst rect = e.target.getBoundingClientRect();\n\t\t\tconst left = window.innerWidth - rect.right < 350 ? e.target.offsetLeft - 165 : e.target.offsetLeft + 110;\n\t\t\tconst top = e.target.offsetTop - 50;\n\n\t\t\tdispatch(updateSelectedCells([...selectedCells, { unitName, timestamp, left, top }]));\n\t\t\tdispatch(toggleDeselectMode(false));\n\t\t}\n\t}\n\n\tfunction gridSelectorTouch(e, realTarget) {\n\t\tif (!realTarget)\n\t\t\trealTarget = document.elementFromPoint(\n\t\t\t\te.nativeEvent.changedTouches[0].clientX,\n\t\t\t\te.nativeEvent.changedTouches[0].clientY\n\t\t\t);\n\n\t\tif (e.nativeEvent.touches.length !== 1 || !realTarget?.classList.contains('grid-item')) return;\n\t\te.preventDefault();\n\n\t\tif (window.modalHide) {\n\t\t\twindow.clearTimeout(window.modalHide);\n\t\t\tdispatch(updateRecentlySelected([]));\n\t\t}\n\t\t// define target to get the actual position/element under finger\n\t\tconst { unitName, timestamp } = realTarget.dataset;\n\t\tconst isSelected = selectedCells.find(cell => cell.unitName === unitName && cell.timestamp === timestamp);\n\n\t\tif (isSelected && deselectMode) {\n\t\t\tdispatch(\n\t\t\t\tupdateSelectedCells(selectedCells.filter(cell => cell.unitName !== unitName && cell.timestamp !== timestamp))\n\t\t\t);\n\t\t} else if (!isSelected && !deselectMode) {\n\t\t\tconst rect = realTarget.getBoundingClientRect();\n\t\t\tconst left = window.innerWidth - rect.right < 350 ? realTarget.offsetLeft - 165 : realTarget.offsetLeft + 110;\n\t\t\tconst top = realTarget.offsetTop - 50;\n\t\t\tdispatch(updateSelectedCells([...selectedCells, { unitName, timestamp, left, top }]));\n\t\t}\n\t}\n\n\tfunction selectToggleMouse(e) {\n\t\te.preventDefault();\n\t\tif (e.target.classList.contains('selected')) dispatch(toggleDeselectMode(true));\n\t\tgridSelectorMouse(e);\n\t}\n\n\tfunction selectToggleTouch(e) {\n\t\te.preventDefault();\n\t\tconst realTarget = document.elementFromPoint(\n\t\t\te.nativeEvent.changedTouches[0].clientX,\n\t\t\te.nativeEvent.changedTouches[0].clientY\n\t\t);\n\n\t\tif (!realTarget.classList.contains('grid-item') || e.touches.length > 1) return;\n\t\tconsole.log(e);\n\n\t\tif (realTarget.classList.contains('selected')) dispatch(toggleDeselectMode(true));\n\t\tgridSelectorTouch(e, realTarget);\n\t}\n\n\tfunction renderInputModal(e) {\n\t\tif (modalVisible || e.target.dataset.drop) return;\n\t\tdispatch(toggleDeselectMode(false));\n\t\tdispatch(toggleModal(true));\n\t\tif (!selectedCells.length && !recentlySelected.length) {\n\t\t\tdispatch(toggleModal(false));\n\t\t\treturn;\n\t\t}\n\t}\n\n\tfunction renderTimeDropdown(e) {\n\t\tconst drop = e.target.dataset?.drop;\n\t\tif (drop) {\n\t\t\tconst rect = e.target.parentElement.getBoundingClientRect();\n\t\t\tconst left =\n\t\t\t\twindow.innerWidth - rect.right < 350\n\t\t\t\t\t? e.target.parentElement.offsetLeft - 165\n\t\t\t\t\t: e.target.parentElement.offsetLeft + 110;\n\t\t\tconst timeColumn = dataCells\n\t\t\t\t.flat()\n\t\t\t\t.filter(cell => cell.props['data-timestamp'] === drop)\n\t\t\t\t.map((cell, i) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tunitName: cell.props['data-unit-name'],\n\t\t\t\t\t\ttimestamp: cell.props['data-timestamp'],\n\t\t\t\t\t\ttop: Math.round(35),\n\t\t\t\t\t\tleft,\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\tconsole.log(e.target.offsetLeft);\n\t\t\tdispatch(updateSelectedCells([...timeColumn]));\n\t\t\tdispatch(updateTimeDropdownOffset([0, e.target.offsetLeft + 29]));\n\t\t\tdispatch(updateDropdownTime(drop));\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (selectedCells.length) {\n\t\t\tconst sorted = [...selectedCells].sort((a, b) => b.left - a.left);\n\t\t\tdispatch(updateModalOffset([sorted[0].top, sorted[0].left]));\n\t\t\tdispatch(toggleModal(true));\n\t\t}\n\n\t\tif (!selectedCells.every(cell => cell.timestamp === selectedCells[0].timestamp)) dispatch(updateDropdownTime(''));\n\t}, [selectedCells, recentlySelected, dispatch]);\n\n\tconst dataCells = units.map(({ name, data }) => {\n\t\tconst cells = [];\n\t\tfor (let i = 0; i < timestamps.length; i++) {\n\t\t\tconst nameCode = name.replace(' ', '');\n\t\t\tcells.push(\n\t\t\t\t<GridItem\n\t\t\t\t\tkey={`${nameCode}-${timestamps[i]}`}\n\t\t\t\t\tclassName={`grid-item ${\n\t\t\t\t\t\t(selectedCells.find(cell => cell.unitName === nameCode && cell.timestamp === timestamps[i]) ||\n\t\t\t\t\t\t\trecentlySelected.find(cell => cell.unitName === nameCode && cell.timestamp === timestamps[i])) &&\n\t\t\t\t\t\t'selected'\n\t\t\t\t\t}`}\n\t\t\t\t\tdata-unit-name={nameCode}\n\t\t\t\t\tdata-timestamp={timestamps[i]}\n\t\t\t\t\tvalue={data?.[timestamps[i]]?.value}\n\t\t\t\t>\n\t\t\t\t\t{data?.[timestamps[i]]?.value}\n\t\t\t\t</GridItem>\n\t\t\t);\n\t\t}\n\t\treturn cells;\n\t});\n\n\treturn (\n\t\t<StyledSubgrid\n\t\t\tchecks={timestamps.length}\n\t\t\tonMouseDown={selectToggleMouse}\n\t\t\tonMouseOver={gridSelectorMouse}\n\t\t\tonTouchStart={selectToggleTouch}\n\t\t\tonTouchMove={gridSelectorTouch}\n\t\t\tonTouchEnd={renderInputModal}\n\t\t\tonClick={renderTimeDropdown}\n\t\t>\n\t\t\t{dropdownTime && <TimeDropdown />}\n\t\t\t{modalVisible && <GridModal />}\n\t\t\t{timestamps.map(time => (\n\t\t\t\t<GridTimestamp key={time}>\n\t\t\t\t\t<div>{time}</div>\n\t\t\t\t\t<p className='material-icons' data-drop={`${time}`}>\n\t\t\t\t\t\tarrow_drop_down\n\t\t\t\t\t</p>\n\t\t\t\t</GridTimestamp>\n\t\t\t))}\n\t\t\t{dataCells}\n\t\t</StyledSubgrid>\n\t);\n}\n\nexport default Subgrid;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nfunction NameList() {\n\tconst units = useSelector(state => state.units);\n\n\treturn units.map(unit => (\n\t\t<React.Fragment key={unit.name}>\n\t\t\t<div key={unit.name}>{unit.name}</div>\n\t\t\t<div key={unit.location}>{unit.location}</div>\n\t\t</React.Fragment>\n\t));\n}\n\nexport default NameList;\n","import React from 'react';\nimport Subgrid from './Subgrid';\nimport NameList from './NameList';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n\tdisplay: grid;\n\twidth: 100%;\n\tgrid-template-columns: 200px 35px 1fr;\n\tgrid-template-rows: 100px repeat(10, 35px);\n\tbackground-color: #282828;\n\toverflow: scroll;\n\n\t& > div {\n\t\tborder: 0.5px solid white;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tbox-sizing: border-box;\n\t}\n`;\n\nconst GridLabel = styled.div`\n\tborder: 0.5px solid white;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tbox-sizing: border-box;\n\tfont-size: 2.5rem;\n\t${props =>\n\t\tprops.location &&\n\t\t`writing-mode: vertical-lr;\n        font-size: 1.3em;`}\n`;\n\nfunction GridContainer() {\n\treturn (\n\t\t<Container>\n\t\t\t<GridLabel>Name</GridLabel>\n\t\t\t<GridLabel location>Location</GridLabel>\n\t\t\t<Subgrid />\n\t\t\t<NameList />\n\t\t</Container>\n\t);\n}\n\nexport default GridContainer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const configSlice = createSlice({\n\tname: 'config',\n\tinitialState: {\n\t\tshiftStart: '2200',\n\t\tshiftEnd: '0700',\n\t\tarea: null,\n\t},\n\treducers: {\n\t\tsetShift: (state, action) => {\n\t\t\tstate.shiftStart = action.payload.shiftStart || state.shiftStart;\n\t\t\tstate.shiftEnd = action.payload.shiftEnd || state.shiftEnd;\n\t\t},\n\t\tsetArea: (state, action) => {\n\t\t\tstate.area = action.payload;\n\t\t},\n\t},\n});\n\nexport const { setShift, setArea } = configSlice.actions;\n\nexport default configSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport configReducer from './configReducer';\nimport unitReducer from './unitReducer';\nimport gridReducer from './gridReducer';\n\nexport default configureStore({\n\treducer: {\n\t\tconfig: configReducer,\n\t\tgrid: gridReducer,\n\t\tunits: unitReducer,\n\t},\n});\n","import './App.css';\nimport Header from './components/Header';\nimport GridContainer from './components/GridContainer';\n\nimport { Provider } from 'react-redux';\nimport store from './utils/globalState';\n\nfunction App() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Header />\n\t\t\t<main>\n\t\t\t\t<GridContainer />\n\t\t\t</main>\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}